apiVersion: batch/v1
kind: CronJob
metadata:
  name: "{{ .Values.appNameServiceSample }}"
  namespace: {{ .Values.Common.Namespace }}
spec:
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  schedule: "50 13 * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: {{ .Values.appNameServiceSample }}
          annotations:
            # datadog log configuration
            ad.datadoghq.com/tags: '{"env": "{{ .Values.deployEnv }}"}'
            ad.datadoghq.com/{{ .Values.appNameServiceSample }}.logs: >-
              [{
                "service": "{{ .Values.appNameServiceSample }}",
                "log_processing_rules": [{
                  "type": "multi_line",
                  "name": "new_log_start_with_date",
                  "pattern": "^\\[[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{3}Z\\]"
                }]
              }]
        spec:
          volumes:
            - hostPath:
                path: /var/run/datadog/
              name: apmsocketpath
          restartPolicy: Never
          containers:
            - name: "{{ .Values.appNameServiceSample }}"
              image: {{ .Values.imageName }}
              command:
                - /data/entrypoint.sh
                - --job.name=ServiceSampleJob
              imagePullPolicy: Always
              volumeMounts:
                - name: apmsocketpath
                  mountPath: /var/run/datadog
              resources:
                requests:
                  memory: {{ .Values.resources.requests.memory }}
                  cpu: {{ .Values.resources.requests.cpu }}
                limits:
                  memory: {{ .Values.resources.limits.memory }}
              envFrom:
                - configMapRef: # load configmap as environment variables
                    name: configmap-{{ .Values.Common.ServiceName }}
                - secretRef: # load secret as environment variables
                    name: secret-{{ .Values.Common.ServiceName }}
                # Datadog APM Configurations
#                - name: DD_ENV
#                  value: "{{ .Values.deployEnv }}"
#                - name: DD_SERVICE
#                  value: "{{ .Values.ddService }}"
#                - name: DD_SERVICE_MAPPING
#                  value: >-
#                    mysql:{{ .Values.ddService }}-mysql,
#                    redis:{{ .Values.ddService }}-redis,
#                    java-aws-sdk:{{ .Values.ddService }}-java-aws-sdk
#                - name: DD_VERSION
#                  value: "{{ .Values.deployVersion }}"
#
#                - name: DD_PROFILING_ENABLED
#                  value: "true"
#                - name: DD_LOGS_INJECTION
#                  value: "true"
#                - name: DD_APPSEC_ENABLED
#                  value: "true"
#                - name: DD_TRACE_SAMPLE_RATE
#                  value: "1"
